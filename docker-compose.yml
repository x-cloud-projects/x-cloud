version: '3.2'
services:
  nacos:
    image: nacos/nacos-server:v2.1.0
    restart: on-failure
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9555:9555"
    networks:
      - master
    depends_on:
      - mysql
    environment:
      - PREFER_HOST_MODE=hostname
      - MODE=standalone
      - SPRING_DATASOURCE_PLATFORM=mysql
      - MYSQL_SERVICE_HOST=mysql
      - MYSQL_SERVICE_PORT=3306
      - MYSQL_SERVICE_DB_NAME=nacos
      - MYSQL_SERVICE_USER=nacos
      - MYSQL_SERVICE_PASSWORD=${NACOS_DB_PASS}
      - MYSQL_SERVICE_DB_PARAM=characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useSSL=false
    volumes:
      - ./docker/nacos/logs/:/home/nacos/logs
      - ./docker/nacos/init.d/custom.properties:/home/nacos/init.d/custom.properties

  seata:
    image: seataio/seata-server:latest
    restart: unless-stopped
    ports:
      - "7003:7003" #"8091:8091"
      - "7091:7091"
    networks:
      - master
    environment:
#      - SEATA_PORT=8091
      - SEATA_PORT=7003
      - STORE_MODE=file
#      - SEATA_IP=192.168.1.2
      - SEATA_CONFIG_NAME=file:/root/seata-config/registry
    volumes:
      - ./docker/seata/conf/:/root/seata-config

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - master
    environment:
      #- ADMINER_PLUGINS='tables-filter tinymce'
      - ADMINER_DESIGN='nette'
      - ADMINER_DEFAULT_SERVER=mysql

  mysql:
    image: mysql:5.7
    restart: always
    ports:
      - "3306:3306"
    networks:
      - master
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASS}
    volumes:
      - ./docker/mysql/data/:/var/lib/mysql
      - ./docker/mysql/conf/:/etc/mysql/conf.d
      - ./docker/mysql/init.d/:/docker-entrypoint-initdb.d
    command:
      - '--character-set-server=utf8mb4'
      - '--collation-server=utf8mb4_unicode_ci'

  mongo:
    image: 'mongo:4.2'
    restart: always
    ports:
      - "27017:27017"
    networks:
      - master
    volumes:
      - ./docker/mongo/conf.d:/etc/mongo
      - ./docker/mongo/data:/data/db
      - ./docker/mongo/init.d:/docker-entrypoint-initdb.d
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASS}

  redis:
    image: redis:6-alpine
    restart: always
    ports:
      - "16379:6379"
    networks:
      - master
    environment:
      - REDIS_PASS:${REDIS_PASS}
    volumes:
      - ./docker/redis/conf/:/usr/local/etc/redis
      - ./docker/redis/data/:/data

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
      - "15673:15673"
    networks:
      - master
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=${RABBIT_ADMIN_PASS}

  #docker run -d --name emqx -p 1883:1883 -p 8083:8083 -p 8084:8084 -p 8883:8883 -p 18083:18083 emqx/emqx:latest
  emq:
    image: emqx/emqx
    restart: always
    ports:
      - "18833:1883"
      - "8083:8083"
      - "8084:8084"
      - "8883:8883"
      - "18083:18083"
    networks:
      - master

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - ./docker/zookeeper:/bitnami
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - master

  kafka:
    image: docker.io/bitnami/kafka:3.2
    restart: unless-stopped
    ports:
      - "9092:9092"
    volumes:
      - ./docker/kafka:/bitnami
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - master

  zipkin:
    image: openzipkin/zipkin
    restart: unless-stopped
    ports:
    - "9411:9411"
    networks:
    - master

  camunda:
    image: camunda/camunda-bpm-platform
    restart: unless-stopped
    ports:
    - "8088:8080"
    networks:
     - master

networks:
  master:
    name: master
    external: false